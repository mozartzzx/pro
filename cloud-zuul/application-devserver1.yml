#这个配置文件到时候会放在远程仓库的
server:
  #项目端口
  port: 8388
  #＃应用程序的上下文路径
  #context-path: /myeurekaserver
  
testzzx:
  name: haha
#个人感觉，是先加在本地的，然后在加载配置中心服务器上的，有一样的属性配置会将本地的覆盖掉

zuul:
  routes:
    #标识你服务的名字，这里可以自己定义，一般方便和规范来讲还是跟自己服务的名字一样
    eurekaclient-rs:
    #服务映射的路径，通过这路径就可以从外部访问你的服务了，目的是为了不爆露你机器的IP，面向服务的路由了，给你选一个可用的出来，
    #这里zuul是自动依赖hystrix，ribbon的，不是面向单机
      path: /hhzzx/**
      #这里一定要是你Eureka注册中心的服务的名称，是所以这里配置serviceId因为跟eureka结合了，如果单独使用zuul,那么就必须写自己机器的IP了，
      #如url:http://localhost:8080/  这样的不好就是写死IP了，万一这IP挂了，这高可用性，服务注册那套东西就用不起来了
      serviceId: eurekaclient-rs
    feign-custrom:
      path: /hellofegin/**
      serviceId: feign-custrom
    ribbon-custrom:
      path: /helloribbon/**
      serviceId: ribbon-custrom
  #zuul三种超时配置
  #zuul 如果路由方式是serviceId的方式，那么ribbon的生效，如果是url的方式，则zuul.host开头的生效
  host:
    socket-timeout-millis: 6000
    connect-timeout-millis: 6000

#ribbon.ReadTimeout， ribbon.SocketTimeout这两个就是ribbon超时时间设置
ribbon:
  ReadTimeout: 10000
  ConnectTimeout: 10000

#hystrix熔断超时
hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 6000
